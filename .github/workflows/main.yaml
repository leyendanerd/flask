name: python flask test CI and deploy

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
env:
  SERVICE_NAME: julio0619/flask-ci

jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10.4]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        working-directory: src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test with unittest
        working-directory: src/test
        run: |
          python test.py

  build_dockerhub:
    name: Build application on dockerhub
    needs: [run_tests]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.SERVICE_NAME }}
   
 
  terraform:
    name: " Deploy terraform"
    needs: [build_dockerhub]
    runs-on: ubuntu-latest
    
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Delete old terraform working-directory
        run: rm -rf .terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        working-directory: px-terraform
        run: terraform fmt

      - name: Terraform Init
        working-directory: px-terraform
        run: terraform init
        
      - name: Terraform validate
        working-directory: px-terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: px-terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: px-terraform
        run: terraform apply -auto-approve

        

    
    